version: "3.9"

services:

  mariadbd:
    build: ./docker/mariadbd
    image: "${APP_NAME}_mariadbd_img"
    container_name: "${APP_NAME}_mariadbd"
    restart: unless-stopped
    env_file: .env
    # Open port only for the host. Need for SSH tunnel to connect to database from SQL Manager like HeidiSQL
    # Uncomment ports directive for using SSH tunnel, and uncomment SSH_TUNNEL_EXT_PORT var in .env file
    ports:
      - 127.0.0.1:${SSH_TUNNEL_EXT_PORT}:3306
    # Uncomment this to reset root password and run inside container mysql> FLUSH PRIVILEGES; ALTER USER 'root'@'%' IDENTIFIED BY 'new_password';
    #command: --skip-grant-tables
    volumes:
      - ./db-data:/var/lib/mysql

  php:
    build:
      context: ./docker/php
      args:
        # Transferring current system User ID into container. Fix www-data UID from 82 to ${CURRENT_UID} (Permission denied error)
        CURRENT_GID: ${CURRENT_GID:-$DEFAULT_GID}
        CURRENT_UID: ${CURRENT_UID:-$DEFAULT_UID}
        XDEBUG_ENABLE: ${XDEBUG_ENABLE:-0}
    image: "${APP_NAME}_php_img"
    container_name: "${APP_NAME}_php"
    user: www-data
    restart: unless-stopped
    depends_on:
      - mariadbd
    working_dir: /srv/web
    env_file: .env
    volumes:
      # Web root folder
      - ./web/wp-core:/srv/web
      # WordPress wp-content folder
      - ./web/wp-content:/srv/web/wp-content
      # Debug log
      - ./logs/wordpress:/var/log/wordpress
      # SSMTP config
      - ./config/ssmtp:/etc/ssmtp/templates:ro
      # Xdebug config
      - ./config/xdebug/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini:ro
      # Share shell scripts
      - ./sh:/shell:ro

  nginx:
    build: ./docker/nginx
    image: "${APP_NAME}_nginx_img"
    container_name: "${APP_NAME}_nginx"
    restart: unless-stopped
    depends_on:
      - mariadbd
      - php
    working_dir: /srv/web
    env_file: .env
    ports:
      - "${APP_HTTP_PORT}:${APP_HTTP_PORT}"
      - "${APP_HTTPS_PORT}:${APP_HTTPS_PORT}"
    networks:
      default:
        # Add alias for nginx container to connect from other containers (node watcher for example)
        aliases:
          - "${APP_DOMAIN}"
    volumes:
      # Web root folder
      - ./web/wp-core:/srv/web
      # WordPress wp-content folder
      - ./web/wp-content:/srv/web/wp-content
      # Nginx config
      - ./config/nginx/templates:/etc/nginx/templates:ro
      - ./config/nginx/ssl:/etc/nginx/ssl:ro
      # Logs
      - ./logs/nginx:/var/log/nginx

  cron:
    build:
      context: ./docker/cron
      dockerfile: Dockerfile
      args:
        CURRENT_GID: ${CURRENT_GID:-$DEFAULT_GID}
        CURRENT_UID: ${CURRENT_UID:-$DEFAULT_UID}
    image: "${APP_NAME}_cron_img"
    container_name: "${APP_NAME}_cron"
    restart: unless-stopped
    depends_on:
      - mariadbd
      - php
    env_file: .env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./backups:/srv/backups

networks:
  project_network:
    driver: bridge
