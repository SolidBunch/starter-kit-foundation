version: "3.9"


services:

  database:
    image: mariadb:10.11
    container_name: "${APP_NAME}_database"
    restart: unless-stopped
    env_file: .env
    # Open port only for the host. Need for SSH tunnel to connect to database from SQL Manager like HeidiSQL
    # Uncomment ports directive for using SSH tunnel, and uncomment SSH_TUNNEL_EXT_PORT var in .env file
    ports:
      - 127.0.0.1:${SSH_TUNNEL_EXT_PORT}:3306
    # Uncomment this to reset root password and run inside container mysql> FLUSH PRIVILEGES; ALTER USER 'root'@'%' IDENTIFIED BY 'new_password';
    #command: --skip-grant-tables
    volumes:
      - ./db-data:/var/lib/mysql

  wordpress:
    build:
      context: ./docker/wordpress
      dockerfile: Dockerfile
      args:
        # Transferring current system User ID into container. Fix www-data UID from 82 to ${WWW_DATA_UID} (Permission denied error)
        WWW_DATA_GID: ${WWW_DATA_GID:?Add User Group ID}
        WWW_DATA_UID: ${WWW_DATA_UID:?Add User ID}
    container_name: "${APP_NAME}_wordpress"
    restart: unless-stopped
    depends_on:
      - database
    env_file: .env
    volumes:
      # Web root folder
      - ./app/wp-core:/var/www/html
      # WordPress wp-content folder
      - ./app/wp-content:/var/www/html/wp-content
      # Debug log
      - ./logs/wordpress:/var/log/wordpress

  nginx:
    build: ./docker/nginx
    container_name: "${APP_NAME}_nginx"
    restart: unless-stopped
    depends_on:
      - database
      - wordpress
    env_file: .env
    ports:
      - "${APP_HTTP_PORT}:${APP_HTTP_PORT}"
      - "${APP_HTTPS_PORT}:${APP_HTTPS_PORT}"
    networks:
      default:
        # Add alias for nginx container to connect from other containers (node watcher for example)
        aliases:
          - "${APP_DOMAIN}"
    volumes:
      - ./config/nginx/templates:/etc/nginx/templates
      - ./config/nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
      # Web root folder
      - ./app/wp-core:/var/www/html
      # WordPress wp-content folder
      - ./app/wp-content:/var/www/html/wp-content

  cron:
    build: ./docker/cron
    container_name: "${APP_NAME}_cron"
    restart: unless-stopped
    env_file: .env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config/crontabs:/etc/crontabs
      - ./backups:/srv/wordpress/backups

networks:
  project_network:
    driver: bridge
